---
- name: Check if Solr has been installed already.
  stat:
    path: /opt/solr-{{version}}
  register: solr_install_path_status
- name: download solr
  get_url:
    url: http://archive.apache.org/dist/lucene/solr/{{version}}/solr-{{version}}.tgz
    dest: /opt/solr-{{version}}.tgz
  when: solr_install_path_status.stat.isdir is not defined
  register: solr_download_status
- name: untar solr
  when: not ansible_check_mode
  unarchive:
    copy: no
    src: /opt/solr-{{version}}.tgz
    dest: /opt
    mode: ug+rwX,o+rX
  when: solr_download_status.changed
- name: remove tar file
  file:
    path: /opt/solr-{{version}}.tgz
    state: absent
- name: symlink solr
  file:
    src: /opt/solr-{{version}}
    dest: /opt/solr
    state: link
    owner: "{{solr_user}}"
    group: "{{group}}"
- name: solr should own solr binaries
  file:
    path: /opt/solr-{{version}}
    owner: "{{solr_user}}"
    group: "{{group}}"
    recurse: yes
# - name: confdir should be readable by deploy group
#   file:
#     path: "{{confdir}}"
#     recurse: yes
#     group: "{{group}}"
#     mode: ug+rX
- name: restart solr
  become_user: "{{solr_user}}"
  command: bin/solr restart
  args:
    chdir: /opt/solr
- name: Check if core has been created already
  with_items: "{{cores}}"
  stat:
    path: /opt/solr/server/solr/{{item}}
  register: cores_created
- name: create core
  with_items: "{{cores_created.results}}"
  when: item.stat.isdir is not defined
  become_user: "{{solr_user}}"
  command: bin/solr create -c "{{item.item}}"
  args:
    chdir: /opt/solr
- name: remove conf directory
  become_user: "{{solr_user}}"
  file:
    path: /opt/solr/server/solr/{{item}}/conf
    state: absent
  with_items: "{{cores}}"
- name: symlink confdir
  become_user: "{{solr_user}}"
  file:
    src: "{{confdir}}"
    dest: /opt/solr/server/solr/{{item}}/conf
    state: link
    force: yes
  with_items: "{{cores}}"
- name: restart solr
  become_user: "{{solr_user}}"
  command: bin/solr restart
  args:
    chdir: /opt/solr
